// <auto-generated />
using System;
using EStore.Service.ProductApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EStore.Service.ProductApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230927124541_CategoryAdded")]
    partial class CategoryAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EStore.Service.ProductApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BaseCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Yemek"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Elektronik"
                        },
                        new
                        {
                            Id = 3,
                            BaseCategoryId = 1,
                            CategoryName = "Ana Yemek"
                        },
                        new
                        {
                            Id = 6,
                            BaseCategoryId = 1,
                            CategoryName = "Tatlı"
                        },
                        new
                        {
                            Id = 7,
                            BaseCategoryId = 1,
                            CategoryName = "Aparatif"
                        },
                        new
                        {
                            Id = 4,
                            BaseCategoryId = 2,
                            CategoryName = "Telefon"
                        },
                        new
                        {
                            Id = 5,
                            BaseCategoryId = 4,
                            CategoryName = "Android Telefon"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Temizlik"
                        });
                });

            modelBuilder.Entity("EStore.Service.ProductApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 7,
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImageUrl = "assets/images/14.jpg",
                            Name = "Samosa",
                            Price = 15.0,
                            StockQuantity = 10
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 7,
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImageUrl = "assets/images/12.jpg",
                            Name = "Paneer Tikka",
                            Price = 13.99,
                            StockQuantity = 10
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 6,
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImageUrl = "assets/images/11.jpg",
                            Name = "Sweet Pie",
                            Price = 10.99,
                            StockQuantity = 10
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImageUrl = "assets/images/13.jpg",
                            Name = "Pav Bhaji",
                            Price = 15.0,
                            StockQuantity = 10
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 8,
                            Description = "Çevre dostu tuvalet kağıdı.",
                            ImageUrl = "assets/images/Tuvalet Kağıdı.webp",
                            Name = "Solo Bambu Katkılı 40'lı Tuvalet Kağıdı",
                            Price = 19.0,
                            StockQuantity = 10
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5,
                            Description = "Xiaomi Redmi Note 12 Pro 8 GB 256 GB (Xiaomi Türkiye Garantili)",
                            ImageUrl = "assets/images/Redmi Note 12 Pro.webp",
                            Name = "Xiaomi Redmi Note 12 Pro",
                            Price = 1900.0,
                            StockQuantity = 10
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 5,
                            Description = "Samsung Galaxy A04E 4 GB 128 GB (Samsung Türkiye Garantili)",
                            ImageUrl = "assets/images/Samsung Galaxy A04E.jpg",
                            Name = "Samsung Galaxy A04E",
                            Price = 1700.0,
                            StockQuantity = 10
                        });
                });

            modelBuilder.Entity("EStore.Service.ProductApi.Models.Category", b =>
                {
                    b.HasOne("EStore.Service.ProductApi.Models.Category", "BaseCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("BaseCategoryId");

                    b.Navigation("BaseCategory");
                });

            modelBuilder.Entity("EStore.Service.ProductApi.Models.Product", b =>
                {
                    b.HasOne("EStore.Service.ProductApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EStore.Service.ProductApi.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
